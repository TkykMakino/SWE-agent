
diff --git a/astropy/wcs/wcs.py b/astropy/wcs/wcs.py
index d3a06f2b3..f5b3e24e1 100644
--- a/astropy/wcs/wcs.py
+++ b/astropy/wcs/wcs.py
@@ -1349,6 +1349,8 @@ reduce these to 2 dimensions using the naxis kwarg.
     def wcs_pix2world(self, *args, **kwargs):
         if self.wcs is None:
             raise ValueError("No basic WCS settings were created.")
+        if all(isinstance(arg, (list, tuple)) and len(arg) == 0 for arg in args):
+            return [np.array([]) for _ in args]
         return self._array_converter(
             lambda xy, o: self.wcs.p2s(xy, o)['world'],
             'output', *args, **kwargs)
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 000000000..c91646257
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,17 @@
+from astropy.wcs import WCS
+
+wcs = WCS('2MASS_h.fits')
+
+try:
+    result = wcs.wcs_pix2world([], [], 0)
+    print("Result:", result)
+except Exception as e:
+    print("Error:", e)
+    def wcs_pix2world(self, *args, **kwargs):
+        if self.wcs is None:
+            raise ValueError("No basic WCS settings were created.")
+        if all(len(arg) == 0 for arg in args):
+            return []
+        return self._array_converter(
+            lambda xy, o: self.wcs.p2s(xy, o)['world'],
+            'output', *args, **kwargs)
