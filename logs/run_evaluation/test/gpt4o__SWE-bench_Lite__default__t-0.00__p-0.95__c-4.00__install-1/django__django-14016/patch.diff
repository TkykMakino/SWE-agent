
diff --git a/django/db/models/query_utils.py b/django/db/models/query_utils.py
index c2623f099f..e51da6bce9 100644
--- a/django/db/models/query_utils.py
+++ b/django/db/models/query_utils.py
@@ -9,7 +9,6 @@ import copy
 import functools
 import inspect
 from collections import namedtuple
-
 from django.core.exceptions import FieldError
 from django.db.models.constants import LOOKUP_SEP
 from django.utils import tree
@@ -42,7 +41,10 @@ class Q(tree.Node):
 
     def _combine(self, other, conn):
         if not isinstance(other, Q):
-            raise TypeError(other)
+            if isinstance(other, type({}.keys())):
+                other = list(other)
+            else:
+                raise TypeError(other)
 
         # If the other Q() is empty, ignore it and just use `self`.
         if not other:
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..c138c0a24d
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,8 @@
+from django.db.models import Q
+
+# Reproduce the issue
+try:
+    q1 = Q(x__in={}.keys())
+    q2 = Q() | q1
+except TypeError as e:
+    print(f"Error: {e}")
