
diff --git a/lib/matplotlib/colors.py b/lib/matplotlib/colors.py
index f9e4dcbd62..6158f5617d 100644
--- a/lib/matplotlib/colors.py
+++ b/lib/matplotlib/colors.py
@@ -1208,22 +1208,26 @@ class Normalize:
             If *vmin* and/or *vmax* is not given, they are initialized from the
             minimum and maximum value, respectively, of the first input
             processed; i.e., ``__call__(A)`` calls ``autoscale_None(A)``.
+            If *vmin* or *vmax* is invalid, raise a ValueError.
 
         clip : bool, default: False
             If ``True`` values falling outside the range ``[vmin, vmax]``,
             are mapped to 0 or 1, whichever is closer, and masked values are
             set to 1.  If ``False`` masked values remain masked.
 
-            Clipping silently defeats the purpose of setting the over, under,
-            and masked colors in a colormap, so it is likely to lead to
-            surprises; therefore the default is ``clip=False``.
-
         Notes
         -----
         Returns 0 if ``vmin == vmax``.
         """
         self._vmin = _sanitize_extrema(vmin)
         self._vmax = _sanitize_extrema(vmax)
+        if self._vmin is not None and self._vmax is not None and self._vmin >= self._vmax:
+            raise ValueError("vmin must be less than vmax")
+        self._clip = clip
+        self._scale = None
+        self.callbacks = cbook.CallbackRegistry(signals=["changed"])
+        self._vmin = _sanitize_extrema(vmin)
+        self._vmax = _sanitize_extrema(vmax)
         self._clip = clip
         self._scale = None
         self.callbacks = cbook.CallbackRegistry(signals=["changed"])
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..324f608b9e
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,23 @@
+import matplotlib.pyplot as plt
+from matplotlib.colors import LogNorm
+import numpy as np
+
+# create some random data to fill a 2d plot
+rng = np.random.default_rng(0)
+img = rng.uniform(1, 5, (25, 25))
+
+# plot it
+fig, ax = plt.subplots(layout="constrained")
+plot = ax.pcolormesh(img)
+cbar = fig.colorbar(plot, ax=ax)
+
+vmin = 1
+vmax = 5
+
+plt.ion()
+fig.show()
+plt.pause(0.5)
+
+plot.norm = LogNorm(vmin, vmax)
+plot.autoscale()
+plt.pause(0.5)
