
diff --git a/models.py b/models.py
new file mode 100644
index 0000000000..8eeba5cb23
--- /dev/null
+++ b/models.py
@@ -0,0 +1,7 @@
+from django.db import models
+
+class Publication(models.Model):
+    pass
+
+class Article(models.Model):
+    publications = models.ManyToManyField(to=Publication, blank=True, null=True)
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..653812a92e
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,39 @@
+import os
+import django
+from django.conf import settings
+from django.core.management import call_command
+from django import forms
+from django.contrib import admin
+from django.db import models
+
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'settings')
+django.setup()
+
+class Publication(models.Model):
+    pass
+
+class Article(models.Model):
+    publications = models.ManyToManyField(to=Publication, blank=True, null=True)
+
+class ArticleForm(forms.ModelForm):
+    publications = forms.ModelMultipleChoiceField(
+        Publication.objects.filter(id__lt=2).union(
+            Publication.objects.filter(id__gt=5)
+        ),
+        required=False,
+    )
+
+    class Meta:
+        model = Article
+        fields = ["publications"]
+
+class ArticleAdmin(admin.ModelAdmin):
+    form = ArticleForm
+
+# Run migrations
+call_command('migrate', run_syncdb=True)
+
+# Create a form instance and print the cleaned data
+form = ArticleForm(data={'publications': []})
+form.is_valid()
+print(form.cleaned_data)
diff --git a/settings.py b/settings.py
new file mode 100644
index 0000000000..052d07a23a
--- /dev/null
+++ b/settings.py
@@ -0,0 +1,30 @@
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+    'django.contrib.auth',
+    'django.contrib.admin',
+    'django.contrib.sessions',
+    'django.contrib.messages',
+    'django.contrib.staticfiles',
+    '__main__',  # This will include the models defined in reproduce.py
+]
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': ':memory:',
+    }
+}
+
+SECRET_KEY = 'fake-key'
+
+MIDDLEWARE = [
+    'django.middleware.security.SecurityMiddleware',
+    'django.contrib.sessions.middleware.SessionMiddleware',
+    'django.middleware.common.CommonMiddleware',
+    'django.middleware.csrf.CsrfViewMiddleware',
+    'django.contrib.auth.middleware.AuthenticationMiddleware',
+    'django.contrib.messages.middleware.MessageMiddleware',
+    'django.middleware.clickjacking.XFrameOptionsMiddleware',
+]
+
+ROOT_URLCONF = '__main__'
