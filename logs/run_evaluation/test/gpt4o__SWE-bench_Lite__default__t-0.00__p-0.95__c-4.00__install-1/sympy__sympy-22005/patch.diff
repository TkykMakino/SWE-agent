
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..181e10fda7
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,12 @@
+from sympy import symbols
+from sympy.solvers.polysys import solve_poly_system
+from sympy.polys.polytools import Poly
+
+x, y = symbols('x y')
+
+try:
+    solve_poly_system((x - 1,), x, y)
+except NotImplementedError as e:
+    print("Caught NotImplementedError:", e)
+
+print(solve_poly_system((y - 1,), x, y))
diff --git a/sympy/solvers/polysys.py b/sympy/solvers/polysys.py
index b9809fd4e9..674322d4eb 100644
--- a/sympy/solvers/polysys.py
+++ b/sympy/solvers/polysys.py
@@ -240,7 +240,7 @@ def _solve_reduced_system(system, gens, entry=False):
 
         univariate = list(filter(_is_univariate, basis))
 
-        if len(univariate) == 1:
+        if len(univariate) == 1 and len(gens) == 1:
             f = univariate.pop()
         else:
             raise NotImplementedError(filldedent('''
diff --git a/sympy/solvers/tests/test_polysys.py b/sympy/solvers/tests/test_polysys.py
index 58419f8762..3452238b45 100644
--- a/sympy/solvers/tests/test_polysys.py
+++ b/sympy/solvers/tests/test_polysys.py
@@ -47,7 +47,10 @@ def test_solve_poly_system():
     raises(NotImplementedError, lambda: solve_poly_system([x**3 - y**3], x, y))
     raises(NotImplementedError, lambda: solve_poly_system(
         [z, -2*x*y**2 + x + y**2*z, y**2*(-z - 4) + 2]))
-    raises(PolynomialError, lambda: solve_poly_system([1/x], x))
+    raises(NotImplementedError, lambda: solve_poly_system(
+        Poly(x - 1, x, y), (x, y)))
+    raises(NotImplementedError, lambda: solve_poly_system(
+        Poly(y - 1, x, y), (x, y)))
 
 
 def test_solve_biquadratic():
