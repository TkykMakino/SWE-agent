
diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py
index 7d226955d5..21b4e645c3 100644
--- a/django/db/migrations/serializer.py
+++ b/django/db/migrations/serializer.py
@@ -97,6 +97,34 @@ class DeconstructableSerializer(BaseSerializer):
         else:
             imports = {"import %s" % module}
             name = path
+
+        # Handle inner classes
+        if hasattr(path, '__qualname__'):
+            name = path.__qualname__
+            module = path.__module__
+            imports = {"import %s" % module}
+
+        return name, imports
+        # Handle inner classes
+        if hasattr(path, '__qualname__'):
+            name = path.__qualname__
+            module = path.__module__
+            imports = {"import %s" % module}
+
+        return name, imports
+        # Handle inner classes
+        if hasattr(path, '__qualname__'):
+            name = path.__qualname__
+            module = path.__module__
+            imports = {"import %s" % module}
+
+        return name, imports
+        # Handle inner classes
+        if hasattr(path, '__qualname__'):
+            name = path.__qualname__
+            module = path.__module__
+            imports = {"import %s" % module}
+
         return name, imports
 
     def serialize(self):
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..fadf42eaee
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,21 @@
+import django
+from django.conf import settings
+from django.core.management import call_command
+
+settings.configure(
+    INSTALLED_APPS=[
+        'django.contrib.contenttypes',
+        'django.contrib.auth',
+        'test_app',
+    ],
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    }
+)
+
+django.setup()
+
+call_command('makemigrations', 'test_app')
diff --git a/test_app/__init__.py b/test_app/__init__.py
new file mode 100644
index 0000000000..8b13789179
--- /dev/null
+++ b/test_app/__init__.py
@@ -0,0 +1 @@
+
diff --git a/test_app/apps.py b/test_app/apps.py
new file mode 100644
index 0000000000..d15f13972a
--- /dev/null
+++ b/test_app/apps.py
@@ -0,0 +1,4 @@
+from django.apps import AppConfig
+
+class TestAppConfig(AppConfig):
+    name = 'test_app'
diff --git a/test_app/migrations/0001_initial.py b/test_app/migrations/0001_initial.py
new file mode 100644
index 0000000000..ef835891bd
--- /dev/null
+++ b/test_app/migrations/0001_initial.py
@@ -0,0 +1,22 @@
+# Generated by Django 3.1 on 2024-11-04 11:15
+
+from django.db import migrations, models
+import test_app.models.Outer
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='A',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('field', test_app.models.Outer.Inner(max_length=20)),
+            ],
+        ),
+    ]
diff --git a/test_app/migrations/__init__.py b/test_app/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/test_app/models.py b/test_app/models.py
new file mode 100644
index 0000000000..310ef01887
--- /dev/null
+++ b/test_app/models.py
@@ -0,0 +1,11 @@
+from django.db import models
+
+class Outer(object):
+    class Inner(models.CharField):
+        pass
+
+class A(models.Model):
+    field = Outer.Inner(max_length=20)
+
+    class Meta:
+        app_label = 'test_app'
