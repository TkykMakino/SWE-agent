
diff --git a/django/utils/decorators.py b/django/utils/decorators.py
index 5c9a5d01c7..ee03de97fb 100644
--- a/django/utils/decorators.py
+++ b/django/utils/decorators.py
@@ -38,15 +38,17 @@ def _multi_decorate(decorators, method):
         # 'func'. Also, wrap method.__get__() in a function because new
         # attributes can't be set on bound method objects, only on functions.
         bound_method = partial(method.__get__(self, type(self)))
+        bound_method = wraps(method)(bound_method)
         for dec in decorators:
             bound_method = dec(bound_method)
         return bound_method(*args, **kwargs)
+        return bound_method(*args, **kwargs)
 
     # Copy any attributes that a decorator adds to the function it decorates.
     for dec in decorators:
         _update_method_wrapper(_wrapper, dec)
     # Preserve any existing attributes of 'method', including the name.
-    update_wrapper(_wrapper, method)
+    wraps(method)(_wrapper)
     return _wrapper
 
 
