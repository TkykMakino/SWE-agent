
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..b1b5d0adc5
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,10 @@
+from django.db import models
+
+class TestModel(models.Model):
+    field1 = models.CharField(max_length=100)
+    field2 = models.CharField(max_length=100)
+
+    class Meta:
+        constraints = [
+            models.UniqueConstraint(fields=['non_existent_field'], name='unique_non_existent')
+        ]
diff --git a/tests/i18n/sampleproject/sampleproject/settings.py b/tests/i18n/sampleproject/sampleproject/settings.py
index e69de29bb2..94f778bb5b 100644
--- a/tests/i18n/sampleproject/sampleproject/settings.py
+++ b/tests/i18n/sampleproject/sampleproject/settings.py
@@ -0,0 +1,38 @@
+SECRET_KEY = 'dummy_secret_key_for_testing'
+
+INSTALLED_APPS = [
+    'django.contrib.admin',
+    'django.contrib.auth',
+    'django.contrib.contenttypes',
+    'django.contrib.sessions',
+    'django.contrib.messages',
+    'django.contrib.staticfiles',
+    'sampleproject.testapp',
+]
+
+MIDDLEWARE = [
+    'django.middleware.security.SecurityMiddleware',
+    'django.contrib.sessions.middleware.SessionMiddleware',
+    'django.middleware.common.CommonMiddleware',
+    'django.middleware.csrf.CsrfViewMiddleware',
+    'django.contrib.auth.middleware.AuthenticationMiddleware',
+    'django.contrib.messages.middleware.MessageMiddleware',
+    'django.middleware.clickjacking.XFrameOptionsMiddleware',
+]
+
+TEMPLATES = [
+    {
+        'BACKEND': 'django.template.backends.django.DjangoTemplates',
+        'DIRS': [],
+        'APP_DIRS': True,
+        'OPTIONS': {
+            'context_processors': [
+                'django.template.context_processors.debug',
+                'django.template.context_processors.request',
+                'django.contrib.auth.context_processors.auth',
+                'django.contrib.messages.context_processors.messages',
+            ],
+        },
+    },
+]
+
diff --git a/tests/i18n/sampleproject/sampleproject/testapp/__init__.py b/tests/i18n/sampleproject/sampleproject/testapp/__init__.py
new file mode 100644
index 0000000000..0684929833
--- /dev/null
+++ b/tests/i18n/sampleproject/sampleproject/testapp/__init__.py
@@ -0,0 +1 @@
+default_app_config = 'sampleproject.testapp.apps.TestAppConfig'
diff --git a/tests/i18n/sampleproject/sampleproject/testapp/apps.py b/tests/i18n/sampleproject/sampleproject/testapp/apps.py
new file mode 100644
index 0000000000..d09742f669
--- /dev/null
+++ b/tests/i18n/sampleproject/sampleproject/testapp/apps.py
@@ -0,0 +1,4 @@
+from django.apps import AppConfig
+
+class TestAppConfig(AppConfig):
+    name = 'sampleproject.testapp'
diff --git a/tests/i18n/sampleproject/sampleproject/testapp/migrations/0001_initial.py b/tests/i18n/sampleproject/sampleproject/testapp/migrations/0001_initial.py
new file mode 100644
index 0000000000..c1a00d1c93
--- /dev/null
+++ b/tests/i18n/sampleproject/sampleproject/testapp/migrations/0001_initial.py
@@ -0,0 +1,26 @@
+# Generated by Django 3.2 on 2024-11-04 11:41
+
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='TestModel',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('field1', models.CharField(max_length=100)),
+                ('field2', models.CharField(max_length=100)),
+            ],
+        ),
+        migrations.AddConstraint(
+            model_name='testmodel',
+            constraint=models.UniqueConstraint(fields=('non_existent_field',), name='unique_non_existent'),
+        ),
+    ]
diff --git a/tests/i18n/sampleproject/sampleproject/testapp/migrations/__init__.py b/tests/i18n/sampleproject/sampleproject/testapp/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/i18n/sampleproject/sampleproject/testapp/models.py b/tests/i18n/sampleproject/sampleproject/testapp/models.py
new file mode 100644
index 0000000000..b1b5d0adc5
--- /dev/null
+++ b/tests/i18n/sampleproject/sampleproject/testapp/models.py
@@ -0,0 +1,10 @@
+from django.db import models
+
+class TestModel(models.Model):
+    field1 = models.CharField(max_length=100)
+    field2 = models.CharField(max_length=100)
+
+    class Meta:
+        constraints = [
+            models.UniqueConstraint(fields=['non_existent_field'], name='unique_non_existent')
+        ]
