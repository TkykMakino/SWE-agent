
diff --git a/migrations/0001_initial.py b/migrations/0001_initial.py
new file mode 100644
index 0000000000..c9c4e2605c
--- /dev/null
+++ b/migrations/0001_initial.py
@@ -0,0 +1,36 @@
+# Generated by Django 3.1 on 2024-11-04 11:39
+
+from django.db import migrations, models
+import django.db.models.deletion
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='BlockLibrary',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('name', models.CharField(max_length=100)),
+            ],
+        ),
+        migrations.CreateModel(
+            name='File',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('name', models.CharField(max_length=100)),
+            ],
+        ),
+        migrations.CreateModel(
+            name='FileAccess',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='__main__.file')),
+            ],
+        ),
+    ]
diff --git a/migrations/__init__.py b/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/reproduce_delete_issue.py b/reproduce_delete_issue.py
new file mode 100644
index 0000000000..5fc641dfa5
--- /dev/null
+++ b/reproduce_delete_issue.py
@@ -0,0 +1,50 @@
+import django
+from django.conf import settings
+from django.db import models
+from django.test import TestCase
+from django.core.management import call_command
+
+# Minimal Django settings configuration
+settings.configure(
+    INSTALLED_APPS=[
+        'django.contrib.contenttypes',
+        'django.contrib.auth',
+        '__main__',
+    ],
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    }
+)
+django.setup()
+class BlockLibrary(models.Model):
+    name = models.CharField(max_length=100)
+
+class File(models.Model):
+    name = models.CharField(max_length=100)
+
+class FileAccess(models.Model):
+    file = models.ForeignKey(File, on_delete=models.CASCADE)
+
+call_command('makemigrations', '__main__')
+call_command('migrate', '__main__')
+call_command('makemigrations')
+call_command('migrate')
+call_command('migrate')
+call_command('migrate')
+call_command('migrate', '__main__')
+
+class DeleteIssueTestCase(TestCase):
+    def test_delete_zero_objects(self):
+        # Test delete on model without foreign key
+        result = BlockLibrary.objects.all().delete()
+        print("BlockLibrary delete result:", result)
+
+        # Test delete on model with foreign key
+        result = FileAccess.objects.all().delete()
+        print("FileAccess delete result:", result)
+
+if __name__ == "__main__":
+    call_command('test', '__main__.DeleteIssueTestCase')
