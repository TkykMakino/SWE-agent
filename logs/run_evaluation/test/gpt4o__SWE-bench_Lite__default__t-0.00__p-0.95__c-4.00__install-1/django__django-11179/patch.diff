
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..367c303b17
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,63 @@
+import django
+from django.conf import settings
+from django.db import models, connection
+
+# Minimal Django settings configuration
+settings.configure(
+    INSTALLED_APPS=[
+        'django.contrib.contenttypes',
+    ],
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    }
+)
+
+django.setup()
+
+# Define a simple model for testing
+class TestModel(models.Model):
+    name = models.CharField(max_length=100)
+    class Meta:
+        app_label = 'test_app'
+# Create the table for the model
+with connection.schema_editor() as schema_editor:
+    schema_editor.create_model(TestModel)
+
+# Create an instance of the model
+instance = TestModel.objects.create(name="Test Instance")
+
+# Delete the instance
+instance.delete()
+
+# Check if the primary key is set to None
+print(instance.pk)  # Should print None if the issue is fixed
+
+# Drop the table after the test
+with connection.schema_editor() as schema_editor:
+    schema_editor.delete_model(TestModel)
+
+# Define a simple model for testing
+class TestModel(models.Model):
+    name = models.CharField(max_length=100)
+    class Meta:
+        app_label = 'test_app'
+
+# Create the table for the model
+with connection.schema_editor() as schema_editor:
+    schema_editor.create_model(TestModel)
+
+# Create an instance of the model
+instance = TestModel.objects.create(name="Test Instance")
+
+# Delete the instance
+instance.delete()
+
+# Check if the primary key is set to None
+print(instance.pk)  # Should print None if the issue is fixed
+
+# Drop the table after the test
+with connection.schema_editor() as schema_editor:
+    schema_editor.delete_model(TestModel)
