
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..4e8c68013f
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,18 @@
+from sympy.physics.units import joule, second, convert_to
+
+# Example 1: Issue with convert_to
+expr1 = joule * second
+result1 = convert_to(expr1, joule)
+print(f"convert_to(joule*second, joule) = {result1}")
+
+# Example 2: Expected behavior
+result2 = convert_to(expr1, joule * second)
+print(f"convert_to(joule*second, joule*second) = {result2}")
+
+result3 = convert_to(expr1, 'kg*m**2/s')
+print(f"convert_to(joule*second, kg*m**2/s) = {result3}")
+
+result4 = convert_to(expr1, 'mins')
+print(f"convert_to(joule*second, mins) = {result4}")
+
+print("Script completed successfully, no errors.")
diff --git a/sympy/physics/units/util.py b/sympy/physics/units/util.py
index b03ed4cd88..b507f3d26d 100644
--- a/sympy/physics/units/util.py
+++ b/sympy/physics/units/util.py
@@ -106,6 +106,8 @@ def get_total_scale_factor(expr):
         return expr
 
     expr_scale_factor = get_total_scale_factor(expr)
+    if len(target_units) == 1:
+        return expr_scale_factor * target_units[0] ** depmat[0]
     return expr_scale_factor * Mul.fromiter((1/get_total_scale_factor(u) * u) ** p for u, p in zip(target_units, depmat))
 
 
