
diff --git a/xarray/core/dataarray.py b/xarray/core/dataarray.py
index b0df8749..a3fde1cc 100644
--- a/xarray/core/dataarray.py
+++ b/xarray/core/dataarray.py
@@ -1952,19 +1952,27 @@ class DataArray(AbstractArray, DataWithCoords):
 
         idx = self.indexes[dim]
         if not isinstance(idx, pd.MultiIndex):
-            raise ValueError(f"'{dim}' is not a stacked coordinate")
+            # Handle single-dimension variables
+            data_dict = {self.name: self}
+        else:
+            level_number = idx._get_level_number(level)
+            variables = idx.levels[level_number]
+            variable_dim = idx.names[level_number]
 
-        level_number = idx._get_level_number(level)
-        variables = idx.levels[level_number]
-        variable_dim = idx.names[level_number]
+            # pull variables out of datarray
+            data_dict = {}
+            for k in variables:
+                data_dict[k] = self.sel({variable_dim: k}).squeeze(drop=True)
 
-        # pull variables out of datarray
-        data_dict = {}
-        for k in variables:
-            data_dict[k] = self.sel({variable_dim: k}).squeeze(drop=True)
+        # Ensure no conflicts in dimensions
+        for var in data_dict.values():
+            if dim in var.dims:
+                var = var.drop_vars(dim)
 
         # unstacked dataset
         return Dataset(data_dict)
+        return Dataset(data_dict)
+        return Dataset(data_dict)
 
     def transpose(self, *dims: Hashable, transpose_coords: bool = True) -> "DataArray":
         """Return a new DataArray object with transposed dimensions.
