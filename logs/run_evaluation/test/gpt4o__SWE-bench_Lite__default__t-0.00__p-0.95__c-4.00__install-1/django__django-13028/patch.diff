
diff --git a/adminpricing/__init__.py b/adminpricing/__init__.py
new file mode 100644
index 0000000000..8b13789179
--- /dev/null
+++ b/adminpricing/__init__.py
@@ -0,0 +1 @@
+
diff --git a/adminpricing/migrations/0001_initial.py b/adminpricing/migrations/0001_initial.py
new file mode 100644
index 0000000000..dacf8212a8
--- /dev/null
+++ b/adminpricing/migrations/0001_initial.py
@@ -0,0 +1,57 @@
+# Generated by Django 3.2 on 2024-11-04 11:49
+
+from django.db import migrations, models
+import django.db.models.deletion
+import django.utils.timezone
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='Plateforme',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('name', models.CharField(max_length=255)),
+            ],
+        ),
+        migrations.CreateModel(
+            name='ProductMetaDataType',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('label', models.CharField(max_length=255, unique=True)),
+                ('filterable', models.BooleanField(default=False, verbose_name='filterable')),
+            ],
+            options={
+                'verbose_name': 'product meta data type',
+                'verbose_name_plural': 'product meta data types',
+            },
+        ),
+        migrations.CreateModel(
+            name='Produit',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('name', models.CharField(max_length=255)),
+            ],
+        ),
+        migrations.CreateModel(
+            name='ProductMetaData',
+            fields=[
+                ('id', models.BigAutoField(primary_key=True, serialize=False)),
+                ('value', models.TextField()),
+                ('date_created', models.DateTimeField(default=django.utils.timezone.now, null=True)),
+                ('marketplace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpricing.plateforme')),
+                ('metadata_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpricing.productmetadatatype')),
+                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminpricing.produit')),
+            ],
+            options={
+                'verbose_name': 'product meta data',
+                'verbose_name_plural': 'product meta datas',
+            },
+        ),
+    ]
diff --git a/adminpricing/migrations/__init__.py b/adminpricing/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/adminpricing/models.py b/adminpricing/models.py
new file mode 100644
index 0000000000..13ef886d6a
--- /dev/null
+++ b/adminpricing/models.py
@@ -0,0 +1,31 @@
+
+import os
+import django
+from adminpricing.models import ProductMetaDataType, ProductMetaData
+
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'settings')
+django.setup()
+
+# Reproduce the error
+try:
+    ProductMetaData.objects.filter(value="Dark Vador", metadata_type=ProductMetaDataType.objects.get(label="brand_metadata"))
+except Exception as e:
+    print(e)
+import django
+from django.db import models
+from django.utils.translation import gettext_lazy as _
+from django.utils import timezone
+from django.core.management import call_command
+
+
+# Run migrations
+call_command('makemigrations', 'adminpricing')
+call_command('migrate')
+
+from adminpricing.models import ProductMetaDataType, ProductMetaData
+
+# Reproduce the error
+try:
+    ProductMetaData.objects.filter(value="Dark Vador", metadata_type=ProductMetaDataType.objects.get(label="brand_metadata"))
+except Exception as e:
+    print(e)
diff --git a/manage.py b/manage.py
new file mode 100644
index 0000000000..e85c14580e
--- /dev/null
+++ b/manage.py
@@ -0,0 +1,14 @@
+import os
+import sys
+
+if __name__ == "__main__":
+    os.environ.setdefault("DJANGO_SETTINGS_MODULE", "settings")
+    try:
+        from django.core.management import execute_from_command_line
+    except ImportError as exc:
+        raise ImportError(
+            "Couldn't import Django. Are you sure it's installed and "
+            "available on your PYTHONPATH environment variable? Did you "
+            "forget to activate a virtual environment?"
+        ) from exc
+    execute_from_command_line(sys.argv)
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..d2e99fd6f9
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,21 @@
+import os
+import django
+from django.db import models
+from django.utils.translation import gettext_lazy as _
+from django.utils import timezone
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'settings')
+django.setup()
+
+from django.core.management import call_command
+
+# Run migrations
+call_command('makemigrations', 'adminpricing')
+call_command('migrate')
+
+from adminpricing.models import ProductMetaDataType, ProductMetaData
+
+# Reproduce the error
+try:
+    ProductMetaData.objects.filter(value="Dark Vador", metadata_type=ProductMetaDataType.objects.get(label="brand_metadata"))
+except Exception as e:
+    print(e)
diff --git a/settings.py b/settings.py
new file mode 100644
index 0000000000..cdc90b8b15
--- /dev/null
+++ b/settings.py
@@ -0,0 +1,16 @@
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+    'django.contrib.auth',
+    'adminpricing',
+]
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': ':memory:',
+    }
+}
+
+USE_TZ = True
+
+SECRET_KEY = 'test'
