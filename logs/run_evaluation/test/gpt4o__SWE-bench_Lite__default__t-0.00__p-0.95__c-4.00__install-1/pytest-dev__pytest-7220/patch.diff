
diff --git a/src/_pytest/_code/code.py b/src/_pytest/_code/code.py
index 7b17d7612..ad39e5da1 100644
--- a/src/_pytest/_code/code.py
+++ b/src/_pytest/_code/code.py
@@ -775,7 +775,7 @@ class FormattedExcinfo:
                 message = "in %s" % (entry.name)
             else:
                 message = excinfo and excinfo.typename or ""
-            path = self._makepath(entry.path)
+            path = py.path.local(entry.path).bestrelpath()
             reprfileloc = ReprFileLocation(path, entry.lineno + 1, message)
             localsrepr = self.repr_locals(entry.locals)
             return ReprEntry(lines, reprargs, localsrepr, reprfileloc, style)
@@ -789,13 +789,12 @@ class FormattedExcinfo:
             return ReprEntry(lines, None, None, None, style)
 
     def _makepath(self, path):
-        if not self.abspath:
-            try:
-                np = py.path.local().bestrelpath(path)
-            except OSError:
-                return path
-            if len(np) < len(str(path)):
-                path = np
+        try:
+            np = py.path.local().bestrelpath(path)
+        except OSError:
+            return path
+        if len(np) < len(str(path)):
+            path = np
         return path
 
     def repr_traceback(self, excinfo: ExceptionInfo) -> "ReprTraceback":
@@ -1104,7 +1103,7 @@ class ReprEntry(TerminalRepr):
 
 @attr.s(**{ATTRS_EQ_FIELD: False})  # type: ignore
 class ReprFileLocation(TerminalRepr):
-    path = attr.ib(type=str, converter=str)
+    path = attr.ib(type=str, converter=lambda p: py.path.local().bestrelpath(p))
     lineno = attr.ib(type=int)
     message = attr.ib(type=str)
 
