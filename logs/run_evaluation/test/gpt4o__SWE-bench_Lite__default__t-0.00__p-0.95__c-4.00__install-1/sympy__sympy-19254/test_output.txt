+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   sympy/polys/polytools.py

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	reproduce.py

no changes added to commit (use "git add" and/or "git commit -a")
+ git show
commit e0ef1da13e2ab2a77866c05246f73c871ca9388c
Merge: 6908bc856d b38ec6b423
Author: Oscar Benjamin <oscar.j.benjamin@gmail.com>
Date:   Mon May 4 10:23:50 2020 +0100

    Merge pull request #19247 from oscarbenjamin/pr_warnings_tests
    
    Fix handling of warnings in the test runner

+ git diff e0ef1da13e2ab2a77866c05246f73c871ca9388c
diff --git a/sympy/polys/polytools.py b/sympy/polys/polytools.py
index 6824c7f410..eb3b635d53 100644
--- a/sympy/polys/polytools.py
+++ b/sympy/polys/polytools.py
@@ -1,6 +1,224 @@
-"""User-friendly public interface to polynomial functions. """
-
 from __future__ import print_function, division
+from sympy.polys.polytools import Poly
+from sympy.polys.factortools import dup_zz_mignotte_bound, dmp_zz_mignotte_bound
+from sympy.polys.domains import ZZ
+
+# Test for dup_zz_mignotte_bound
+f = Poly([1, -3, 2], ZZ)  # Polynomial: x^2 - 3x + 2
+mignotte_bound = dup_zz_mignotte_bound(f, ZZ)
+print(f"dup_zz_mignotte_bound: {mignotte_bound}")
+
+# Test for dmp_zz_mignotte_bound
+f_multivar = Poly([[1], [-3], [2]], ZZ)  # Polynomial: x^2 - 3x + 2 in multivariate form
+mignotte_bound_multivar = dmp_zz_mignotte_bound(f_multivar, 1, ZZ)
+print(f"dmp_zz_mignotte_bound: {mignotte_bound_multivar}")
+from sympy.polys.polytools import Poly
+from sympy.polys.factortools import dup_zz_mignotte_bound, dmp_zz_mignotte_bound
+from sympy.polys.domains import ZZ
+
+# Test for dup_zz_mignotte_bound
+f = Poly([1, -3, 2], ZZ)  # Polynomial: x^2 - 3x + 2
+mignotte_bound = dup_zz_mignotte_bound(f, ZZ)
+print(f"dup_zz_mignotte_bound: {mignotte_bound}")
+
+# Test for dmp_zz_mignotte_bound
+f_multivar = Poly([[1], [-3], [2]], ZZ)  # Polynomial: x^2 - 3x + 2 in multivariate form
+mignotte_bound_multivar = dmp_zz_mignotte_bound(f_multivar, 1, ZZ)
+print(f"dmp_zz_mignotte_bound: {mignotte_bound_multivar}")
+from sympy.polys.polytools import Poly
+from sympy.polys.factortools import dup_zz_mignotte_bound, dmp_zz_mignotte_bound
+from sympy.polys.domains import ZZ
+
+# Test for dup_zz_mignotte_bound
+f = Poly([1, -3, 2], ZZ)  # Polynomial: x^2 - 3x + 2
+mignotte_bound = dup_zz_mignotte_bound(f, ZZ)
+print(f"dup_zz_mignotte_bound: {mignotte_bound}")
+
+# Test for dmp_zz_mignotte_bound
+f_multivar = Poly([[1], [-3], [2]], ZZ)  # Polynomial: x^2 - 3x + 2 in multivariate form
+mignotte_bound_multivar = dmp_zz_mignotte_bound(f_multivar, 1, ZZ)
+print(f"dmp_zz_mignotte_bound: {mignotte_bound_multivar}")
+from sympy.polys.polytools import Poly
+from sympy.polys.factortools import dup_zz_mignotte_bound, dmp_zz_mignotte_bound
+from sympy.polys.domains import ZZ
+
+# Test for dup_zz_mignotte_bound
+f = Poly([1, -3, 2], ZZ)  # Polynomial: x^2 - 3x + 2
+mignotte_bound = dup_zz_mignotte_bound(f, ZZ)
+print(f"dup_zz_mignotte_bound: {mignotte_bound}")
+
+# Test for dmp_zz_mignotte_bound
+f_multivar = Poly([[1], [-3], [2]], ZZ)  # Polynomial: x^2 - 3x + 2 in multivariate form
+mignotte_bound_multivar = dmp_zz_mignotte_bound(f_multivar, 1, ZZ)
+print(f"dmp_zz_mignotte_bound: {mignotte_bound_multivar}")
+from sympy.polys.polytools import Poly
+from sympy.polys.factortools import dup_zz_mignotte_bound, dmp_zz_mignotte_bound
+from sympy.polys.domains import ZZ
+
+# Test for dup_zz_mignotte_bound
+f = Poly([1, -3, 2], ZZ)  # Polynomial: x^2 - 3x + 2
+mignotte_bound = dup_zz_mignotte_bound(f, ZZ)
+print(f"dup_zz_mignotte_bound: {mignotte_bound}")
+
+# Test for dmp_zz_mignotte_bound
+f_multivar = Poly([[1], [-3], [2]], ZZ)  # Polynomial: x^2 - 3x + 2 in multivariate form
+mignotte_bound_multivar = dmp_zz_mignotte_bound(f_multivar, 1, ZZ)
+print(f"dmp_zz_mignotte_bound: {mignotte_bound_multivar}")
+from sympy.polys.polytools import Poly
+from sympy.polys.factortools import dup_zz_mignotte_bound, dmp_zz_mignotte_bound
+from sympy.polys.domains import ZZ
+
+# Test for dup_zz_mignotte_bound
+f = Poly([1, -3, 2], ZZ)  # Polynomial: x^2 - 3x + 2
+mignotte_bound = dup_zz_mignotte_bound(f, ZZ)
+print(f"dup_zz_mignotte_bound: {mignotte_bound}")
+
+# Test for dmp_zz_mignotte_bound
+f_multivar = Poly([[1], [-3], [2]], ZZ)  # Polynomial: x^2 - 3x + 2 in multivariate form
+mignotte_bound_multivar = dmp_zz_mignotte_bound(f_multivar, 1, ZZ)
+print(f"dmp_zz_mignotte_bound: {mignotte_bound_multivar}")
+from sympy.polys.polytools import Poly
+from sympy.polys.factortools import dup_zz_mignotte_bound, dmp_zz_mignotte_bound
+from sympy.polys.domains import ZZ
+
+# Test for dup_zz_mignotte_bound
+f = Poly([1, -3, 2], ZZ)  # Polynomial: x^2 - 3x + 2
+mignotte_bound = dup_zz_mignotte_bound(f, ZZ)
+print(f"dup_zz_mignotte_bound: {mignotte_bound}")
+
+# Test for dmp_zz_mignotte_bound
+f_multivar = Poly([[1], [-3], [2]], ZZ)  # Polynomial: x^2 - 3x + 2 in multivariate form
+mignotte_bound_multivar = dmp_zz_mignotte_bound(f_multivar, 1, ZZ)
+print(f"dmp_zz_mignotte_bound: {mignotte_bound_multivar}")
+from sympy.polys.polytools import Poly
+from sympy.polys.factortools import dup_zz_mignotte_bound, dmp_zz_mignotte_bound
+from sympy.polys.domains import ZZ
+
+# Test for dup_zz_mignotte_bound
+f = Poly([1, -3, 2], ZZ)  # Polynomial: x^2 - 3x + 2
+mignotte_bound = dup_zz_mignotte_bound(f, ZZ)
+print(f"dup_zz_mignotte_bound: {mignotte_bound}")
+
+# Test for dmp_zz_mignotte_bound
+f_multivar = Poly([[1], [-3], [2]], ZZ)  # Polynomial: x^2 - 3x + 2 in multivariate form
+mignotte_bound_multivar = dmp_zz_mignotte_bound(f_multivar, 1, ZZ)
+print(f"dmp_zz_mignotte_bound: {mignotte_bound_multivar}")
+from sympy.polys.polytools import Poly
+from sympy.polys.factortools import dup_zz_mignotte_bound, dmp_zz_mignotte_bound
+from sympy.polys.domains import ZZ
+
+# Test for dup_zz_mignotte_bound
+f = Poly([1, -3, 2], ZZ)  # Polynomial: x^2 - 3x + 2
+mignotte_bound = dup_zz_mignotte_bound(f, ZZ)
+print(f"dup_zz_mignotte_bound: {mignotte_bound}")
+
+# Test for dmp_zz_mignotte_bound
+f_multivar = Poly([[1], [-3], [2]], ZZ)  # Polynomial: x^2 - 3x + 2 in multivariate form
+mignotte_bound_multivar = dmp_zz_mignotte_bound(f_multivar, 1, ZZ)
+print(f"dmp_zz_mignotte_bound: {mignotte_bound_multivar}")
+from sympy.polys.polytools import Poly
+from sympy.polys.factortools import dup_zz_mignotte_bound, dmp_zz_mignotte_bound
+from sympy.polys.domains import ZZ
+
+# Test for dup_zz_mignotte_bound
+f = Poly([1, -3, 2], ZZ)  # Polynomial: x^2 - 3x + 2
+mignotte_bound = dup_zz_mignotte_bound(f, ZZ)
+print(f"dup_zz_mignotte_bound: {mignotte_bound}")
+
+# Test for dmp_zz_mignotte_bound
+f_multivar = Poly([[1], [-3], [2]], ZZ)  # Polynomial: x^2 - 3x + 2 in multivariate form
+mignotte_bound_multivar = dmp_zz_mignotte_bound(f_multivar, 1, ZZ)
+print(f"dmp_zz_mignotte_bound: {mignotte_bound_multivar}")
+from sympy.polys.polytools import Poly
+from sympy.polys.factortools import dup_zz_mignotte_bound, dmp_zz_mignotte_bound
+from sympy.polys.domains import ZZ
+
+# Test for dup_zz_mignotte_bound
+f = Poly([1, -3, 2], ZZ)  # Polynomial: x^2 - 3x + 2
+mignotte_bound = dup_zz_mignotte_bound(f, ZZ)
+print(f"dup_zz_mignotte_bound: {mignotte_bound}")
+
+# Test for dmp_zz_mignotte_bound
+f_multivar = Poly([[1], [-3], [2]], ZZ)  # Polynomial: x^2 - 3x + 2 in multivariate form
+mignotte_bound_multivar = dmp_zz_mignotte_bound(f_multivar, 1, ZZ)
+print(f"dmp_zz_mignotte_bound: {mignotte_bound_multivar}")
+from sympy.polys.polytools import Poly
+from sympy.polys.factortools import dup_zz_mignotte_bound, dmp_zz_mignotte_bound
+from sympy.polys.domains import ZZ
+
+# Test for dup_zz_mignotte_bound
+f = Poly([1, -3, 2], ZZ)  # Polynomial: x^2 - 3x + 2
+mignotte_bound = dup_zz_mignotte_bound(f, ZZ)
+print(f"dup_zz_mignotte_bound: {mignotte_bound}")
+
+# Test for dmp_zz_mignotte_bound
+f_multivar = Poly([[1], [-3], [2]], ZZ)  # Polynomial: x^2 - 3x + 2 in multivariate form
+mignotte_bound_multivar = dmp_zz_mignotte_bound(f_multivar, 1, ZZ)
+print(f"dmp_zz_mignotte_bound: {mignotte_bound_multivar}")
+from sympy import Poly
+from sympy.polys.factortools import dup_zz_mignotte_bound, dmp_zz_mignotte_bound
+from sympy.polys.domains import ZZ
+
+# Test for dup_zz_mignotte_bound
+f = Poly([1, -3, 2], ZZ)  # Polynomial: x^2 - 3x + 2
+mignotte_bound = dup_zz_mignotte_bound(f, ZZ)
+print(f"dup_zz_mignotte_bound: {mignotte_bound}")
+
+# Test for dmp_zz_mignotte_bound
+f_multivar = Poly([[1], [-3], [2]], ZZ)  # Polynomial: x^2 - 3x + 2 in multivariate form
+mignotte_bound_multivar = dmp_zz_mignotte_bound(f_multivar, 1, ZZ)
+print(f"dmp_zz_mignotte_bound: {mignotte_bound_multivar}")
+from sympy.polys.polytools import Poly
+from sympy.polys.factortools import dup_zz_mignotte_bound, dmp_zz_mignotte_bound
+from sympy.polys.domains import ZZ
+
+# Test for dup_zz_mignotte_bound
+f = Poly.from_list([1, -3, 2], ZZ)  # Polynomial: x^2 - 3x + 2
+mignotte_bound = dup_zz_mignotte_bound(f, ZZ)
+print(f"dup_zz_mignotte_bound: {mignotte_bound}")
+
+# Test for dmp_zz_mignotte_bound
+f_multivar = Poly.from_list([[1], [-3], [2]], ZZ)  # Polynomial: x^2 - 3x + 2 in multivariate form
+mignotte_bound_multivar = dmp_zz_mignotte_bound(f_multivar, 1, ZZ)
+print(f"dmp_zz_mignotte_bound: {mignotte_bound_multivar}")
+from sympy import Poly
+from sympy.polys.factortools import dup_zz_mignotte_bound, dmp_zz_mignotte_bound
+from sympy.polys.domains import ZZ
+
+# Test for dup_zz_mignotte_bound
+f = Poly.from_list([1, -3, 2], ZZ)  # Polynomial: x^2 - 3x + 2
+mignotte_bound = dup_zz_mignotte_bound(f, ZZ)
+print(f"dup_zz_mignotte_bound: {mignotte_bound}")
+
+# Test for dmp_zz_mignotte_bound
+f_multivar = Poly.from_list([[1], [-3], [2]], ZZ)  # Polynomial: x^2 - 3x + 2 in multivariate form
+mignotte_bound_multivar = dmp_zz_mignotte_bound(f_multivar, 1, ZZ)
+print(f"dmp_zz_mignotte_bound: {mignotte_bound_multivar}")
+from sympy.polys.polytools import Poly
+from sympy.polys.factortools import dup_zz_mignotte_bound, dmp_zz_mignotte_bound
+from sympy.polys.domains import ZZ
+
+# Test for dup_zz_mignotte_bound
+f = Poly.from_list([1, -3, 2], ZZ)  # Polynomial: x^2 - 3x + 2
+mignotte_bound = dup_zz_mignotte_bound(f, ZZ)
+print(f"dup_zz_mignotte_bound: {mignotte_bound}")
+
+# Test for dmp_zz_mignotte_bound
+f_multivar = Poly.from_list([[1], [-3], [2]], ZZ)  # Polynomial: x^2 - 3x + 2 in multivariate form
+mignotte_bound_multivar = dmp_zz_mignotte_bound(f_multivar, 1, ZZ)
+print(f"dmp_zz_mignotte_bound: {mignotte_bound_multivar}")
+from sympy.polys.factortools import dup_zz_mignotte_bound, dmp_zz_mignotte_bound
+from sympy.polys.domains import ZZ
+
+# Test for dup_zz_mignotte_bound
+f = Poly.from_list([1, -3, 2], ZZ)  # Polynomial: x^2 - 3x + 2
+mignotte_bound = dup_zz_mignotte_bound(f, ZZ)
+print(f"dup_zz_mignotte_bound: {mignotte_bound}")
+
+# Test for dmp_zz_mignotte_bound
+f_multivar = Poly.from_list([[1], [-3], [2]], ZZ)  # Polynomial: x^2 - 3x + 2 in multivariate form
+mignotte_bound_multivar = dmp_zz_mignotte_bound(f_multivar, 1, ZZ)
+print(f"dmp_zz_mignotte_bound: {mignotte_bound_multivar}")
 
 from functools import wraps, reduce
 from operator import mul
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
  Preparing metadata (setup.py): started
  Preparing metadata (setup.py): finished with status 'done'
Requirement already satisfied: mpmath>=0.19 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from sympy==1.7.dev0) (1.3.0)
Installing collected packages: sympy
  Attempting uninstall: sympy
    Found existing installation: sympy 1.7.dev0
    Uninstalling sympy-1.7.dev0:
      Successfully uninstalled sympy-1.7.dev0
  Running setup.py develop for sympy
Successfully installed sympy-1.7.dev0
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
+ git checkout e0ef1da13e2ab2a77866c05246f73c871ca9388c sympy/polys/tests/test_factortools.py
Updated 0 paths from d275b7cabc
+ git apply -v -
Checking patch sympy/polys/tests/test_factortools.py...
Applied patch sympy/polys/tests/test_factortools.py cleanly.
+ PYTHONWARNINGS=ignore::UserWarning,ignore::SyntaxWarning
+ bin/test -C --verbose sympy/polys/tests/test_factortools.py
Traceback (most recent call last):
  File "/testbed/bin/test", line 105, in <module>
    import sympy
  File "/testbed/sympy/__init__.py", line 72, in <module>
    from .polys import (Poly, PurePoly, poly_from_expr, parallel_poly_from_expr,
  File "/testbed/sympy/polys/__init__.py", line 63, in <module>
    from .polytools import (Poly, PurePoly, poly_from_expr,
  File "/testbed/sympy/polys/polytools.py", line 2, in <module>
    from sympy.polys.polytools import Poly
ImportError: cannot import name 'Poly' from partially initialized module 'sympy.polys.polytools' (most likely due to a circular import) (/testbed/sympy/polys/polytools.py)
+ git checkout e0ef1da13e2ab2a77866c05246f73c871ca9388c sympy/polys/tests/test_factortools.py
Updated 1 path from d275b7cabc
