
diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py
index 28374272f4..64c15cf9f4 100644
--- a/django/db/models/fields/__init__.py
+++ b/django/db/models/fields/__init__.py
@@ -516,17 +516,23 @@ class Field(RegisterLookupMixin):
     def __eq__(self, other):
         # Needed for @total_ordering
         if isinstance(other, Field):
+            # Fields from different models should not be equal
+            if self.model != other.model:
+                return False
             return self.creation_counter == other.creation_counter
         return NotImplemented
 
     def __lt__(self, other):
         # This is needed because bisect does not take a comparison function.
         if isinstance(other, Field):
+            # Order by model name first, then by creation counter
+            if self.model._meta.label != other.model._meta.label:
+                return self.model._meta.label < other.model._meta.label
             return self.creation_counter < other.creation_counter
         return NotImplemented
 
     def __hash__(self):
-        return hash(self.creation_counter)
+        return hash((self.creation_counter, self.model))
 
     def __deepcopy__(self, memodict):
         # We don't have to deepcopy very much here, since most things are not
