
diff --git a/pylint/checkers/misc.py b/pylint/checkers/misc.py
index 69149e61a..aeccd22bf 100644
--- a/pylint/checkers/misc.py
+++ b/pylint/checkers/misc.py
@@ -121,10 +121,11 @@ class EncodingChecker(BaseChecker):
 
         notes = "|".join(re.escape(note) for note in self.config.notes)
         if self.config.notes_rgx:
-            regex_string = rf"#\s*({notes}|{self.config.notes_rgx})\b"
+            regex_string = rf"#\s*({notes}|{self.config.notes_rgx})"
         else:
-            regex_string = rf"#\s*({notes})\b"
+            regex_string = rf"#\s*({notes})"
 
+        print(regex_string)  # Debug: print out the regex pattern
         self._fixme_pattern = re.compile(regex_string, re.I)
 
     def _check_encoding(
@@ -188,7 +189,7 @@ class EncodingChecker(BaseChecker):
                     continue
 
             # emit warnings if necessary
-            match = self._fixme_pattern.search("#" + comment_text.lower())
+            match = self._fixme_pattern.search(comment_text.lower())
             if match:
                 self.add_message(
                     "fixme",
diff --git a/test.py b/test.py
new file mode 100644
index 000000000..0f4eee0d1
--- /dev/null
+++ b/test.py
@@ -0,0 +1,2 @@
+# YES: yes
+# ???: no
diff --git a/test_pylint.py b/test_pylint.py
new file mode 100644
index 000000000..7745af916
--- /dev/null
+++ b/test_pylint.py
@@ -0,0 +1,18 @@
+import subprocess
+
+# Command to run pylint with the --notes option
+command = ["pylint", "test.py", "--notes=???,YES"]
+
+# Execute the command and capture the output
+result = subprocess.run(command, capture_output=True, text=True)
+
+# Check for both expected warnings in the output
+expected_warnings = ["YES: yes", "???: no"]
+success = all(warning in result.stdout for warning in expected_warnings)
+
+# Print the result
+if success:
+    print("Test passed: Both warnings detected.")
+else:
+    print("Test failed: Not all warnings detected.")
+    print(result.stdout)
