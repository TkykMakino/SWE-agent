
diff --git a/sklearn/utils/_pprint.py b/sklearn/utils/_pprint.py
index b8686dba5..a4b30c45e 100644
--- a/sklearn/utils/_pprint.py
+++ b/sklearn/utils/_pprint.py
@@ -1,5 +1,5 @@
-"""This module contains the _EstimatorPrettyPrinter class used in
-BaseEstimator.__repr__ for pretty-printing estimators"""
+import numpy as np
+# BaseEstimator.__repr__ for pretty-printing estimators"""
 
 # Copyright (c) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
 # 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018 Python Software Foundation;
@@ -95,8 +95,12 @@ def _changed_params(estimator):
     init_params = signature(init_func).parameters
     init_params = {name: param.default for name, param in init_params.items()}
     for k, v in params.items():
-        if (v != init_params[k] and
-                not (is_scalar_nan(init_params[k]) and is_scalar_nan(v))):
+        # Use numpy.array_equal to compare array-like objects.
+        if isinstance(v, (np.ndarray, list, tuple)) or isinstance(init_params[k], (np.ndarray, list, tuple)):
+            if not np.array_equal(v, init_params[k]):
+                filtered_params[k] = v
+        # Fallback to the original comparison if they are not array-like
+        elif v != init_params[k] and not (is_scalar_nan(init_params[k]) and is_scalar_nan(v)):
             filtered_params[k] = v
     return filtered_params
 
