
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..dc8f8f1f90
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,16 @@
+from django.db import models
+from django.core.management import call_command
+from django.core.management.base import CommandError
+
+class TestModel(models.Model):
+    name = models.CharField(max_length=100)
+
+    class Meta:
+        constraints = [
+            models.UniqueConstraint(fields=['non_existent_field'], name='unique_non_existent')
+        ]
+
+try:
+    call_command('makemigrations', 'test_app')
+except CommandError as e:
+    print(e)
diff --git a/settings.py b/settings.py
new file mode 100644
index 0000000000..30bb655c89
--- /dev/null
+++ b/settings.py
@@ -0,0 +1,14 @@
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+    'django.contrib.auth',
+    'test_app',
+]
+os.environ['DJANGO_SETTINGS_MODULE'] = 'test_app.settings'
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': ':memory:',
+    }
+}
+
+SECRET_KEY = 'test_secret_key'
diff --git a/test_app/settings.py b/test_app/settings.py
new file mode 100644
index 0000000000..6c777da725
--- /dev/null
+++ b/test_app/settings.py
@@ -0,0 +1,19 @@
+import os
+from django.db import models
+from django.core.management import call_command
+from django.core.management.base import CommandError
+
+os.environ['DJANGO_SETTINGS_MODULE'] = 'settings'
+
+class TestModel(models.Model):
+    name = models.CharField(max_length=100)
+
+    class Meta:
+        constraints = [
+            models.UniqueConstraint(fields=['non_existent_field'], name='unique_non_existent')
+        ]
+
+try:
+    call_command('makemigrations', 'test_app')
+except CommandError as e:
+    print(e)
