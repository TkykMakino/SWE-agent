
diff --git a/django/db/backends/base/creation.py b/django/db/backends/base/creation.py
index 503f7f56fd..676342680e 100644
--- a/django/db/backends/base/creation.py
+++ b/django/db/backends/base/creation.py
@@ -74,7 +74,7 @@ class BaseDatabaseCreation:
         # and store it on the connection. This slightly horrific process is so people
         # who are testing on databases without transactions or who are using
         # a TransactionTestCase still get a clean database on every test run.
-        if serialize:
+        if serialize and self.connection.settings_dict['TEST'].get('MIGRATE', True):
             self.connection._test_serialized_contents = self.serialize_db_to_string()
 
         call_command('createcachetable', database=self.connection.alias)
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..882210292f
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,55 @@
+import os
+import django
+from django.conf import settings
+from django.core.management import call_command
+from django.test import TestCase
+
+# Minimal Django settings
+settings.configure(
+    SECRET_KEY='dummy_secret_key',
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+            'TEST': {
+                'MIGRATE': False,
+            },
+        },
+    },
+    INSTALLED_APPS=[
+        'django.contrib.contenttypes',
+        'django.contrib.auth',
+        'django.contrib.admin',
+        'django.contrib.sessions',
+        'django.contrib.messages',
+    ],
+    MIDDLEWARE=[
+        'django.contrib.sessions.middleware.SessionMiddleware',
+        'django.contrib.auth.middleware.AuthenticationMiddleware',
+        'django.contrib.messages.middleware.MessageMiddleware',
+    ],
+    TEMPLATES=[
+        {
+            'BACKEND': 'django.template.backends.django.DjangoTemplates',
+            'DIRS': [],
+            'APP_DIRS': True,
+            'OPTIONS': {
+                'context_processors': [
+                    'django.template.context_processors.debug',
+                    'django.template.context_processors.request',
+                    'django.contrib.auth.context_processors.auth',
+                    'django.contrib.messages.context_processors.messages',
+                ],
+            },
+        },
+    ],
+)
+
+django.setup()
+
+class SimpleTest(TestCase):
+    def test_nothing(self):
+        self.assertTrue(True)
+
+if __name__ == "__main__":
+    call_command('test', __name__)
