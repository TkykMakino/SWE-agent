
diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py
index 0c64748ccd..e5ef12daf3 100644
--- a/django/db/models/fields/__init__.py
+++ b/django/db/models/fields/__init__.py
@@ -1663,6 +1663,8 @@ class FilePathField(Field):
 
     def __init__(self, verbose_name=None, name=None, path='', match=None,
                  recursive=False, allow_files=True, allow_folders=False, **kwargs):
+        if callable(path):
+            path = path()
         self.path, self.match, self.recursive = path, match, recursive
         self.allow_files, self.allow_folders = allow_files, allow_folders
         kwargs.setdefault('max_length', 100)
@@ -1688,7 +1690,7 @@ class FilePathField(Field):
     def deconstruct(self):
         name, path, args, kwargs = super().deconstruct()
         if self.path != '':
-            kwargs['path'] = self.path
+            kwargs['path'] = self.path() if callable(self.path) else self.path
         if self.match is not None:
             kwargs['match'] = self.match
         if self.recursive is not False:
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..0a990661b2
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,20 @@
+import os
+from django.conf import settings
+from django.db import models
+
+# Configure settings
+settings.configure(LOCAL_FILE_DIR='/home/user/server_files')
+
+class LocalFiles(models.Model):
+    name = models.CharField(max_length=255)
+    file = models.FilePathField(path=lambda: os.path.join(settings.LOCAL_FILE_DIR, 'example_dir'))
+
+print("Script completed successfully, no errors.")
+from django.conf import settings
+from django.db import models
+
+class LocalFiles(models.Model):
+    name = models.CharField(max_length=255)
+    file = models.FilePathField(path=lambda: os.path.join(settings.LOCAL_FILE_DIR, 'example_dir'))
+
+print("Script completed successfully, no errors.")
