
diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py
index 27b5cbd379..500615188c 100644
--- a/django/db/migrations/serializer.py
+++ b/django/db/migrations/serializer.py
@@ -48,6 +48,8 @@ class BaseSimpleSerializer(BaseSerializer):
 
 class ChoicesSerializer(BaseSerializer):
     def serialize(self):
+        if isinstance(self.value, enum.Enum):
+            return "%s.%s" % (self.value.__class__.__name__, self.value.name), {"import %s" % self.value.__class__.__module__}
         return serializer_factory(self.value.value).serialize()
 
 
diff --git a/models.py b/models.py
new file mode 100644
index 0000000000..1d51accbf7
--- /dev/null
+++ b/models.py
@@ -0,0 +1,13 @@
+from enum import Enum
+from django.utils.translation import gettext_lazy as _
+from django.db import models
+
+class Status(Enum):
+    GOOD = _('Good')  # 'Good' will be translated
+    BAD = _('Bad')  # 'Bad' will be translated
+
+    def __str__(self):
+        return self.name
+
+class Item(models.Model):
+    status = models.CharField(default=Status.GOOD, max_length=128)
diff --git a/tests/i18n/sampleproject/db.sqlite3 b/tests/i18n/sampleproject/db.sqlite3
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/i18n/sampleproject/myapp/__init__.py b/tests/i18n/sampleproject/myapp/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/i18n/sampleproject/myapp/admin.py b/tests/i18n/sampleproject/myapp/admin.py
new file mode 100644
index 0000000000..8c38f3f3da
--- /dev/null
+++ b/tests/i18n/sampleproject/myapp/admin.py
@@ -0,0 +1,3 @@
+from django.contrib import admin
+
+# Register your models here.
diff --git a/tests/i18n/sampleproject/myapp/apps.py b/tests/i18n/sampleproject/myapp/apps.py
new file mode 100644
index 0000000000..74d6d13183
--- /dev/null
+++ b/tests/i18n/sampleproject/myapp/apps.py
@@ -0,0 +1,5 @@
+from django.apps import AppConfig
+
+
+class MyappConfig(AppConfig):
+    name = 'myapp'
diff --git a/tests/i18n/sampleproject/myapp/migrations/0001_initial.py b/tests/i18n/sampleproject/myapp/migrations/0001_initial.py
new file mode 100644
index 0000000000..4a26a1ffde
--- /dev/null
+++ b/tests/i18n/sampleproject/myapp/migrations/0001_initial.py
@@ -0,0 +1,43 @@
+# Generated by Django 3.1 on 2024-11-02 08:41
+
+import datetime
+from django.db import migrations, models
+import myapp.models
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='Company',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('name', models.CharField(max_length=50)),
+                ('date_added', models.DateTimeField(default=datetime.datetime(1799, 1, 31, 23, 59, 59))),
+                ('cents_paid', models.DecimalField(decimal_places=2, max_digits=4)),
+                ('products_delivered', models.IntegerField()),
+            ],
+            options={
+                'verbose_name': 'Company',
+            },
+        ),
+        migrations.CreateModel(
+            name='Item',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('status', models.CharField(default=myapp.models.Status('Good'), max_length=128)),
+            ],
+        ),
+        migrations.CreateModel(
+            name='TestModel',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('text', models.CharField(default='Anything', max_length=10)),
+            ],
+        ),
+    ]
diff --git a/tests/i18n/sampleproject/myapp/migrations/__init__.py b/tests/i18n/sampleproject/myapp/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tests/i18n/models.py b/tests/i18n/sampleproject/myapp/models.py
similarity index 65%
rename from tests/i18n/models.py
rename to tests/i18n/sampleproject/myapp/models.py
index 15b4de57b6..26030621f7 100644
--- a/tests/i18n/models.py
+++ b/tests/i18n/sampleproject/myapp/models.py
@@ -1,13 +1,18 @@
 from datetime import datetime
-
+from enum import Enum
 from django.db import models
 from django.utils.translation import gettext_lazy as _
 
+class Status(Enum):
+    GOOD = _('Good')  # 'Good' will be translated
+    BAD = _('Bad')  # 'Bad' will be translated
+
+    def __str__(self):
+        return self.name
 
 class TestModel(models.Model):
     text = models.CharField(max_length=10, default=_('Anything'))
 
-
 class Company(models.Model):
     name = models.CharField(max_length=50)
     date_added = models.DateTimeField(default=datetime(1799, 1, 31, 23, 59, 59, 0))
@@ -16,3 +21,6 @@ class Company(models.Model):
 
     class Meta:
         verbose_name = _('Company')
+
+class Item(models.Model):
+    status = models.CharField(default=Status.GOOD, max_length=128)
diff --git a/tests/i18n/sampleproject/myapp/tests.py b/tests/i18n/sampleproject/myapp/tests.py
new file mode 100644
index 0000000000..7ce503c2dd
--- /dev/null
+++ b/tests/i18n/sampleproject/myapp/tests.py
@@ -0,0 +1,3 @@
+from django.test import TestCase
+
+# Create your tests here.
diff --git a/tests/i18n/sampleproject/myapp/views.py b/tests/i18n/sampleproject/myapp/views.py
new file mode 100644
index 0000000000..91ea44a218
--- /dev/null
+++ b/tests/i18n/sampleproject/myapp/views.py
@@ -0,0 +1,3 @@
+from django.shortcuts import render
+
+# Create your views here.
diff --git a/tests/i18n/sampleproject/sampleproject/settings.py b/tests/i18n/sampleproject/sampleproject/settings.py
index e69de29bb2..6b08b312b4 100644
--- a/tests/i18n/sampleproject/sampleproject/settings.py
+++ b/tests/i18n/sampleproject/sampleproject/settings.py
@@ -0,0 +1,83 @@
+import os
+
+BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
+
+SECRET_KEY = 'fake-key'
+
+DEBUG = True
+
+ALLOWED_HOSTS = []
+
+INSTALLED_APPS = [
+    'django.contrib.admin',
+    'django.contrib.auth',
+    'django.contrib.contenttypes',
+    'django.contrib.sessions',
+    'django.contrib.messages',
+    'django.contrib.staticfiles',
+    'myapp',
+]
+
+MIDDLEWARE = [
+    'django.middleware.security.SecurityMiddleware',
+    'django.contrib.sessions.middleware.SessionMiddleware',
+    'django.middleware.common.CommonMiddleware',
+    'django.middleware.csrf.CsrfViewMiddleware',
+    'django.contrib.auth.middleware.AuthenticationMiddleware',
+    'django.contrib.messages.middleware.MessageMiddleware',
+    'django.middleware.clickjacking.XFrameOptionsMiddleware',
+]
+
+ROOT_URLCONF = 'sampleproject.urls'
+
+TEMPLATES = [
+    {
+        'BACKEND': 'django.template.backends.django.DjangoTemplates',
+        'DIRS': [],
+        'APP_DIRS': True,
+        'OPTIONS': {
+            'context_processors': [
+                'django.template.context_processors.debug',
+                'django.template.context_processors.request',
+                'django.contrib.auth.context_processors.auth',
+                'django.contrib.messages.context_processors.messages',
+            ],
+        },
+    },
+]
+
+WSGI_APPLICATION = 'sampleproject.wsgi.application'
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
+    }
+}
+
+AUTH_PASSWORD_VALIDATORS = [
+    {
+        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
+    },
+]
+
+LANGUAGE_CODE = 'en-us'
+
+TIME_ZONE = 'UTC'
+
+USE_I18N = True
+
+USE_L10N = True
+
+USE_TZ = True
+
+STATIC_URL = '/static/'
diff --git a/tests/i18n/sampleproject/sampleproject/urls.py b/tests/i18n/sampleproject/sampleproject/urls.py
new file mode 100644
index 0000000000..dfc73621fa
--- /dev/null
+++ b/tests/i18n/sampleproject/sampleproject/urls.py
@@ -0,0 +1,6 @@
+from django.contrib import admin
+from django.urls import path
+
+urlpatterns = [
+    path('admin/', admin.site.urls),
+]
