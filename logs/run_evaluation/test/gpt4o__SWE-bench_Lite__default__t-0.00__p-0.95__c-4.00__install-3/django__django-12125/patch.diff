
diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py
index 7d226955d5..67595c027e 100644
--- a/django/db/migrations/serializer.py
+++ b/django/db/migrations/serializer.py
@@ -88,6 +88,7 @@ class DeconstructableSerializer(BaseSerializer):
             strings.append("%s=%s" % (kw, arg_string))
         return "%s(%s)" % (name, ", ".join(strings)), imports
 
+    @staticmethod
     @staticmethod
     def _serialize_path(path):
         module, name = path.rsplit(".", 1)
@@ -96,7 +97,11 @@ class DeconstructableSerializer(BaseSerializer):
             name = "models.%s" % name
         else:
             imports = {"import %s" % module}
-            name = path
+            # Handle inner class paths
+            if "." in name:
+                name = path
+            else:
+                name = path
         return name, imports
 
     def serialize(self):
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..8a97f0fbf4
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,90 @@
+import django
+from django.conf import settings
+import os
+
+# Configure Django settings
+settings.configure(
+    INSTALLED_APPS=[
+        'django.contrib.contenttypes',
+        'django.contrib.auth',
+        'test_app',
+    ],
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    },
+)
+
+# Create the Django app directory structure
+os.makedirs('test_app/migrations', exist_ok=True)
+with open('test_app/__init__.py', 'w') as f:
+    pass
+with open('test_app/models.py', 'w') as f:
+    f.write('''
+from django.db import models
+
+class Outer(object):
+    class Inner(models.CharField):
+        pass
+
+class A(models.Model):
+    field = Outer.Inner(max_length=20)
+''')
+
+# Setup Django
+django.setup()
+
+# Run makemigrations
+from django.core.management import call_command
+call_command('makemigrations', 'test_app')
+from django.core.management import call_command
+call_command('makemigrations', 'test_app')
+from django.conf import settings
+from django.db import models
+import os
+
+# Configure Django settings
+settings.configure(
+    INSTALLED_APPS=[
+        'django.contrib.contenttypes',
+        'django.contrib.auth',
+        'test_app',
+    ],
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    },
+)
+
+# Define the models
+class Outer(object):
+    class Inner(models.CharField):
+        pass
+
+class A(models.Model):
+    field = Outer.Inner(max_length=20)
+
+# Create the Django app directory structure
+os.makedirs('test_app/migrations', exist_ok=True)
+with open('test_app/__init__.py', 'w') as f:
+    pass
+with open('test_app/models.py', 'w') as f:
+    f.write('''
+from django.db import models
+
+class Outer(object):
+    class Inner(models.CharField):
+        pass
+
+class A(models.Model):
+    field = Outer.Inner(max_length=20)
+''')
+
+# Run makemigrations
+django.setup()
+from django.core.management import call_command
+call_command('makemigrations', 'test_app')
diff --git a/test_app/__init__.py b/test_app/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/test_app/migrations/0001_initial.py b/test_app/migrations/0001_initial.py
new file mode 100644
index 0000000000..97e8e9e6be
--- /dev/null
+++ b/test_app/migrations/0001_initial.py
@@ -0,0 +1,22 @@
+# Generated by Django 3.1 on 2024-11-02 08:51
+
+from django.db import migrations, models
+import test_app.models.Outer
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='A',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('field', test_app.models.Outer.Inner(max_length=20)),
+            ],
+        ),
+    ]
diff --git a/test_app/migrations/__init__.py b/test_app/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/test_app/models.py b/test_app/models.py
new file mode 100644
index 0000000000..d95ab58b95
--- /dev/null
+++ b/test_app/models.py
@@ -0,0 +1,9 @@
+
+from django.db import models
+
+class Outer(object):
+    class Inner(models.CharField):
+        pass
+
+class A(models.Model):
+    field = Outer.Inner(max_length=20)
