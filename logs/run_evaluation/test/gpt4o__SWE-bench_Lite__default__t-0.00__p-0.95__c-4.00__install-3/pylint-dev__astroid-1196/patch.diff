
diff --git a/astroid/nodes/node_classes.py b/astroid/nodes/node_classes.py
index 11136f8c..34a8462b 100644
--- a/astroid/nodes/node_classes.py
+++ b/astroid/nodes/node_classes.py
@@ -2362,7 +2362,9 @@ class Dict(NodeNG, Instance):
             if isinstance(key, DictUnpack):
                 try:
                     return value.getitem(index, context)
-                except (AstroidTypeError, AstroidIndexError):
+                except (AstroidTypeError, AstroidIndexError, AttributeError):
+                    continue
+                    continue
                     continue
             for inferredkey in key.infer(context):
                 if inferredkey is util.Uninferable:
@@ -2370,7 +2372,7 @@ class Dict(NodeNG, Instance):
                 if isinstance(inferredkey, Const) and isinstance(index, Const):
                     if inferredkey.value == index.value:
                         return value
-
+        raise AstroidIndexError(f"Index {index.value!r} not found in dictionary")
         raise AstroidIndexError(index)
 
     def bool_value(self, context=None):
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 00000000..2545f878
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,22 @@
+from astroid import parse
+
+source = """
+X = {
+    'A': 'B'
+}
+
+Y = {
+    **X
+}
+
+KEY = 'A'
+"""
+
+tree = parse(source)
+
+first_dict = tree.body[0].value
+second_dict = tree.body[1].value
+key = tree.body[2].value
+
+print(f'{first_dict.getitem(key).value = }')
+print(f'{second_dict.getitem(key).value = }')
