
diff --git a/astroid/nodes/node_classes.py b/astroid/nodes/node_classes.py
index 11136f8c..e4f00690 100644
--- a/astroid/nodes/node_classes.py
+++ b/astroid/nodes/node_classes.py
@@ -2361,9 +2361,13 @@ class Dict(NodeNG, Instance):
             # TODO(cpopa): no support for overriding yet, {1:2, **{1: 3}}.
             if isinstance(key, DictUnpack):
                 try:
-                    return value.getitem(index, context)
-                except (AstroidTypeError, AstroidIndexError):
-                    continue
+                    if isinstance(value, Dict):
+                        for unpacked_key, unpacked_value in value.items:
+                            if isinstance(unpacked_key, Const) and unpacked_key.value == index.value:
+                                return unpacked_value
+                    raise AstroidIndexError(f"Index {index.value} not found in dictionary")
+                except AttributeError:
+                    raise AstroidIndexError(f"Index {index.value} not found in dictionary")
             for inferredkey in key.infer(context):
                 if inferredkey is util.Uninferable:
                     continue
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 00000000..2545f878
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,22 @@
+from astroid import parse
+
+source = """
+X = {
+    'A': 'B'
+}
+
+Y = {
+    **X
+}
+
+KEY = 'A'
+"""
+
+tree = parse(source)
+
+first_dict = tree.body[0].value
+second_dict = tree.body[1].value
+key = tree.body[2].value
+
+print(f'{first_dict.getitem(key).value = }')
+print(f'{second_dict.getitem(key).value = }')
