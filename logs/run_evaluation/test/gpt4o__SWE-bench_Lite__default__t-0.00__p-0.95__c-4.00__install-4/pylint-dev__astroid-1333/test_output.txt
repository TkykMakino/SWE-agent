+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
Untracked files:
  (use "git add <file>..." to include in what will be committed)
	root_dir/

nothing added to commit but untracked files present (use "git add" to track)
+ git show
commit d2a5b3c7b1e203fec3c7ca73c30eb1785d3d4d0a
Author: Pierre Sassoulas <pierre.sassoulas@gmail.com>
Date:   Tue Jan 4 00:15:30 2022 +0100

    Fix a typo in the changelog

diff --git a/ChangeLog b/ChangeLog
index e2dfa508..6c56d234 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -12,7 +12,7 @@ What's New in astroid 2.9.2?
 ============================
 Release date: 2022-01-04
 
-* Fixed regression in ``astroid.scoped_nodes`` where ```_is_metaclass``
+* Fixed regression in ``astroid.scoped_nodes`` where ``_is_metaclass``
   was not accessible anymore.
 
 Closes #1325
+ git diff d2a5b3c7b1e203fec3c7ca73c30eb1785d3d4d0a
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
  Preparing metadata (setup.py): started
  Preparing metadata (setup.py): finished with status 'done'
Requirement already satisfied: lazy_object_proxy>=1.4.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from astroid==2.10.0.dev0) (1.10.0)
Requirement already satisfied: wrapt<1.14,>=1.11 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from astroid==2.10.0.dev0) (1.13.3)
Requirement already satisfied: setuptools>=20.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from astroid==2.10.0.dev0) (75.1.0)
Requirement already satisfied: typing-extensions>=3.10 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from astroid==2.10.0.dev0) (4.12.2)
Installing collected packages: astroid
  Attempting uninstall: astroid
    Found existing installation: astroid 2.10.0.dev0
    Uninstalling astroid-2.10.0.dev0:
      Successfully uninstalled astroid-2.10.0.dev0
  DEPRECATION: Legacy editable install of astroid==2.10.0.dev0 from file:///testbed (setup.py develop) is deprecated. pip 25.0 will enforce this behaviour change. A possible replacement is to add a pyproject.toml or enable --use-pep517, and use setuptools >= 64. If the resulting installation is not behaving as expected, try using --config-settings editable_mode=compat. Please consult the setuptools documentation for more information. Discussion can be found at https://github.com/pypa/pip/issues/11457
  Running setup.py develop for astroid
Successfully installed astroid
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git checkout d2a5b3c7b1e203fec3c7ca73c30eb1785d3d4d0a tests/unittest_modutils.py
Updated 0 paths from 418f7be3
+ git apply -v -
Checking patch tests/unittest_modutils.py...
Applied patch tests/unittest_modutils.py cleanly.
+ pytest -rA tests/unittest_modutils.py
============================= test session starts ==============================
platform linux -- Python 3.9.20, pytest-8.3.3, pluggy-1.5.0
rootdir: /testbed
configfile: setup.cfg
collected 47 items

tests/unittest_modutils.py ...............F............................. [ 95%]
..                                                                       [100%]

=================================== FAILURES ===================================
_____________ ModPathFromFileTest.test_load_packages_without_init ______________

self = <tests.unittest_modutils.ModPathFromFileTest testMethod=test_load_packages_without_init>

    def test_load_packages_without_init(self) -> None:
        """Test that we correctly find packages with an __init__.py file.
    
        Regression test for issue reported in:
        https://github.com/PyCQA/astroid/issues/1327
        """
        tmp_dir = Path(tempfile.gettempdir())
        self.addCleanup(os.chdir, os.curdir)
        os.chdir(tmp_dir)
    
        self.addCleanup(shutil.rmtree, tmp_dir / "src")
        os.mkdir(tmp_dir / "src")
        os.mkdir(tmp_dir / "src" / "package")
        with open(tmp_dir / "src" / "__init__.py", "w", encoding="utf-8"):
            pass
        with open(tmp_dir / "src" / "package" / "file.py", "w", encoding="utf-8"):
            pass
    
        # this should be equivalent to: import secret
        self.assertEqual(
>           modutils.modpath_from_file(str(Path("src") / "package"), ["."]),
            ["src", "package"],
        )

/testbed/tests/unittest_modutils.py:213: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/testbed/astroid/modutils.py:344: in modpath_from_file
    return modpath_from_file_with_callback(filename, path, check_modpath_has_init)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

filename = 'src/package', path = ['.']
is_package_cb = <function check_modpath_has_init at 0x7fe1ec6fb430>

    def modpath_from_file_with_callback(filename, path=None, is_package_cb=None):
        filename = os.path.expanduser(_path_from_filename(filename))
        for pathname in itertools.chain(
            path or [], map(_cache_normalize_path, sys.path), sys.path
        ):
            if not pathname:
                continue
            modpath = _get_relative_base_path(filename, pathname)
            if not modpath:
                continue
            if is_package_cb(pathname, modpath[:-1]):
                return modpath
    
>       raise ImportError(
            "Unable to find module for {} in {}".format(filename, ", \n".join(sys.path))
        )
E       ImportError: Unable to find module for src/package in /testbed, 
E       /opt/miniconda3/envs/testbed/bin, 
E       /opt/miniconda3/envs/testbed/lib/python39.zip, 
E       /opt/miniconda3/envs/testbed/lib/python3.9, 
E       /opt/miniconda3/envs/testbed/lib/python3.9/lib-dynload, 
E       /opt/miniconda3/envs/testbed/lib/python3.9/site-packages, 
E       /testbed, 
E       /opt/miniconda3/envs/testbed/lib/python3.9/site-packages/setuptools/_vendor

/testbed/astroid/modutils.py:321: ImportError
=============================== warnings summary ===============================
astroid/interpreter/_import/util.py:7
  /testbed/astroid/interpreter/_import/util.py:7: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html
    import pkg_resources

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
==================================== PASSES ====================================
=========================== short test summary info ============================
PASSED tests/unittest_modutils.py::ModuleFileTest::test_find_egg_module
PASSED tests/unittest_modutils.py::ModuleFileTest::test_find_zipped_module
PASSED tests/unittest_modutils.py::LoadModuleFromNameTest::test_known_values_load_module_from_name_1
PASSED tests/unittest_modutils.py::LoadModuleFromNameTest::test_known_values_load_module_from_name_2
PASSED tests/unittest_modutils.py::LoadModuleFromNameTest::test_raise_load_module_from_name_1
PASSED tests/unittest_modutils.py::GetModulePartTest::test_get_module_part_exception
PASSED tests/unittest_modutils.py::GetModulePartTest::test_known_values_get_builtin_module_part
PASSED tests/unittest_modutils.py::GetModulePartTest::test_known_values_get_compiled_module_part
PASSED tests/unittest_modutils.py::GetModulePartTest::test_known_values_get_module_part_1
PASSED tests/unittest_modutils.py::GetModulePartTest::test_known_values_get_module_part_2
PASSED tests/unittest_modutils.py::GetModulePartTest::test_known_values_get_module_part_3
PASSED tests/unittest_modutils.py::ModPathFromFileTest::test_import_symlink_both_outside_of_path
PASSED tests/unittest_modutils.py::ModPathFromFileTest::test_import_symlink_with_source_outside_of_path
PASSED tests/unittest_modutils.py::ModPathFromFileTest::test_known_values_modpath_from_file_1
PASSED tests/unittest_modutils.py::ModPathFromFileTest::test_load_from_module_symlink_on_symlinked_paths_in_syspath
PASSED tests/unittest_modutils.py::ModPathFromFileTest::test_raise_modpath_from_file_exception
PASSED tests/unittest_modutils.py::LoadModuleFromPathTest::test_do_not_load_twice
PASSED tests/unittest_modutils.py::FileFromModPathTest::test_builtin
PASSED tests/unittest_modutils.py::FileFromModPathTest::test_site_packages
PASSED tests/unittest_modutils.py::FileFromModPathTest::test_std_lib
PASSED tests/unittest_modutils.py::FileFromModPathTest::test_unexisting
PASSED tests/unittest_modutils.py::FileFromModPathTest::test_unicode_in_package_init
PASSED tests/unittest_modutils.py::GetSourceFileTest::test
PASSED tests/unittest_modutils.py::GetSourceFileTest::test_raise
PASSED tests/unittest_modutils.py::StandardLibModuleTest::test_4
PASSED tests/unittest_modutils.py::StandardLibModuleTest::test_builtin
PASSED tests/unittest_modutils.py::StandardLibModuleTest::test_builtins
PASSED tests/unittest_modutils.py::StandardLibModuleTest::test_custom_path
PASSED tests/unittest_modutils.py::StandardLibModuleTest::test_datetime
PASSED tests/unittest_modutils.py::StandardLibModuleTest::test_failing_edge_cases
PASSED tests/unittest_modutils.py::StandardLibModuleTest::test_nonstandard
PASSED tests/unittest_modutils.py::StandardLibModuleTest::test_unknown
PASSED tests/unittest_modutils.py::IsRelativeTest::test_deep_relative
PASSED tests/unittest_modutils.py::IsRelativeTest::test_deep_relative2
PASSED tests/unittest_modutils.py::IsRelativeTest::test_deep_relative3
PASSED tests/unittest_modutils.py::IsRelativeTest::test_deep_relative4
PASSED tests/unittest_modutils.py::IsRelativeTest::test_is_relative_bad_path
PASSED tests/unittest_modutils.py::IsRelativeTest::test_known_values_is_relative_1
PASSED tests/unittest_modutils.py::IsRelativeTest::test_known_values_is_relative_3
PASSED tests/unittest_modutils.py::IsRelativeTest::test_known_values_is_relative_4
PASSED tests/unittest_modutils.py::IsRelativeTest::test_known_values_is_relative_5
PASSED tests/unittest_modutils.py::GetModuleFilesTest::test_get_all_files
PASSED tests/unittest_modutils.py::GetModuleFilesTest::test_get_module_files_1
PASSED tests/unittest_modutils.py::GetModuleFilesTest::test_load_module_set_attribute
PASSED tests/unittest_modutils.py::ExtensionPackageWhitelistTest::test_is_module_name_part_of_extension_package_whitelist_success
PASSED tests/unittest_modutils.py::ExtensionPackageWhitelistTest::test_is_module_name_part_of_extension_package_whitelist_true
FAILED tests/unittest_modutils.py::ModPathFromFileTest::test_load_packages_without_init
=================== 1 failed, 46 passed, 1 warning in 0.54s ====================
+ git checkout d2a5b3c7b1e203fec3c7ca73c30eb1785d3d4d0a tests/unittest_modutils.py
Updated 1 path from 418f7be3
